{"version":3,"sources":["pages/Header.js","pages/Doc.js","pages/Home1.js","pages/Tuto.js","pages/Blog.js","pages/Comm.js","pages/Login.js","pages/Core.js","pages/Guide.js","pages/Api.js","pages/Hooks.js","router.config.js","App.js","index.js"],"names":["Header","activeClassName","exact","to","withRouter","props","className","routes","map","route","i","RouteWithSubRoutes","key","Home1","style","textAlign","onClick","history","push","Tuto","Blog","Comm","Login","localStorage","setItem","replace","location","state","Core","Guide","Api","Hooks","path","component","Doc","pri","PrivateRoute","Com","rest","render","getItem","pathname","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7a6d111f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './header.css'\r\nimport {BrowserRouter as Router,Route,NavLink} from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n    return  <header>\r\n            <nav>\r\n                <NavLink activeClassName='active' exact to='/'>React</NavLink>\r\n                <NavLink activeClassName='active' to='/doc'>文档</NavLink>\r\n                <NavLink activeClassName='active' to='/tuto'>教程</NavLink>\r\n                <NavLink activeClassName='active' to='/blog'>博客</NavLink>\r\n                <NavLink activeClassName='active' to='/comm'>社区</NavLink>\r\n            </nav>\r\n        </header>\r\n        \r\n    \r\n}\r\n\r\nexport default Header","import React, { useEffect } from 'react'\r\n\r\nimport {\r\n    NavLink, Route, Redirect,Switch,\r\n    useHistory,\r\n    useLocation,\r\n    useParams,\r\n    useRouteMatch,\r\n    withRouter\r\n} from 'react-router-dom'\r\nimport './doc.css';\r\nimport {NavBar,Icon} from 'antd-mobile'\r\nimport {RouteWithSubRoutes} from '../App';\r\nconst Doc = (props) => {\r\n    // console.log(props.routes[0].path)\r\n    return (\r\n        <div className='doc'>\r\n            <div className=\"content\">\r\n                {/* 嵌套路由 */ }\r\n                <Switch>\r\n                    {props.routes.map((route, i) => (\r\n                        <RouteWithSubRoutes key={i} {...route} />\r\n                    ))}\r\n                </Switch>\r\n            </div>\r\n\r\n            <ol>\r\n                <li><NavLink to='/doc/core'>核心概念</NavLink></li>\r\n                <li><NavLink to='/doc/guide'>高级指引</NavLink></li>\r\n                <li><NavLink to='/doc/api'>API</NavLink></li>\r\n                <li><NavLink to='/doc/hooks'>Hooks</NavLink></li>\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Doc);","import React from 'react'\r\n// \r\nconst Home1 = (props) => {\r\n   \r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            <h2>React</h2>\r\n            <p>用于构建用户界面的JavaScript库</p>\r\n            <div>\r\n                <button onClick={()=>props.history.push('/doc')}>快速开始</button>\r\n                <button onClick={()=>props.history.push('/tuto')}>入门教程</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home1","import React from 'react'\r\n\r\nconst Tuto = () => {\r\n    return (\r\n        <div>\r\n            Tuto\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tuto","import React from 'react'\r\n\r\nconst Blog = () => {\r\n    return (\r\n        <div>\r\n            Blog\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\n\r\nconst Comm = () => {\r\n    return (\r\n        <div>\r\n            Comm\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comm","import React from 'react'\r\n\r\nconst Login=(props)=>{\r\n    const login=()=>{\r\n        localStorage.setItem('userinfo','tom')\r\n        props.history.replace(props.location.state);\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={login}>登录</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Login;","import React from 'react'\r\n\r\nconst Core = () => {\r\n    return (\r\n        <div>\r\n            core\r\n        </div>\r\n    )\r\n}\r\nexport default Core;\r\n","import React from 'react'\r\n\r\nconst Guide = () => {\r\n    return (\r\n        <div>\r\n            guide\r\n        </div>\r\n    )\r\n}\r\nexport default Guide;\r\n","import React from 'react'\r\n\r\nconst Api = () => {\r\n    return (\r\n        <div>\r\n            api\r\n        </div>\r\n    )\r\n}\r\nexport default Api;\r\n","import React from 'react'\r\n\r\nconst Hooks = () => {\r\n    return (\r\n        <div>\r\n            hooks\r\n        </div>\r\n    )\r\n}\r\nexport default Hooks;\r\n","// import Header from './pages/Header';\r\nimport Home1 from './pages/Home1';\r\nimport Doc from './pages/Doc';\r\nimport Tuto from './pages/Tuto';\r\nimport Blog from './pages/Blog';\r\nimport Comm from './pages/Comm';\r\nimport Login from './pages/Login';\r\nimport Core from './pages/Core';\r\nimport Guide from './pages/Guide';\r\nimport Api from './pages/Api';\r\nimport Hooks from './pages/Hooks';\r\n\r\nimport { configure } from '@testing-library/react';\r\nconst routes=[\r\n    {\r\n        path:'/',\r\n        exact:true,\r\n        component:Home1\r\n    },\r\n    {\r\n        path:'/doc',\r\n        component:Doc,\r\n        pri:true,\r\n        routes:[\r\n            {\r\n                path:'/doc/core',\r\n                component:Core,\r\n            },\r\n            {\r\n                path:'/doc/guide',\r\n                component:Guide,\r\n            },\r\n            {\r\n                path:'/doc/api',\r\n                component:Api,\r\n            },\r\n            {\r\n                path:'/doc/hooks',\r\n                component:Hooks,\r\n            }\r\n\r\n        ]\r\n    },\r\n    {\r\n        path:'/tuto',\r\n        component:Tuto,\r\n        pri:true\r\n    },\r\n    {\r\n        path:'/blog',\r\n        component:Blog,\r\n    },\r\n    {\r\n        path:'/comm',\r\n        component:Comm,\r\n    },\r\n    {\r\n        path:'/login',\r\n        component:Login,\r\n    }\r\n]\r\nexport default routes;","import React from 'react'\r\nimport {BrowserRouter as Router,Redirect,Route,NavLink,Switch} from 'react-router-dom'\r\nimport Header from './pages/Header';\r\n// import Home1 from './pages/Home1';\r\nimport Doc from './pages/Doc';\r\n// import Tuto from './pages/Tuto';\r\n// import Blog from './pages/Blog';\r\n// import Comm from './pages/Comm';\r\n// import Login from './pages/Login';\r\nimport routes from './router.config';\r\n// import {Button,TabBar} from 'antd-mobile';\r\n\r\n// 2020 10 12\r\nfunction PrivateRoute({ component: Com, ...rest }) {\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{ ...rest }\r\n\t\t\trender={ ({ location }) =>\r\n\t\t\t\tlocalStorage.getItem('userinfo')\r\n\t\t\t\t\t? <Com {...rest}/>\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\t\tto={ {\r\n\t\t\t\t\t\t\t\tpathname: \"/login\",\r\n\t\t\t\t\t\t\t\tstate: location\r\n\t\t\t\t\t\t\t} }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction RouteWithSubRoutes(route) {\r\n\tlet {pri,...rest}=route;\r\n\tif(pri){\r\n\t\treturn <PrivateRoute routes={{...rest}.routes} {...rest} />\r\n\t}else{\r\n\t\treturn (\r\n\t\t\t<Route\r\n\t\t\t  path={{...rest}.path}\r\n\t\t\t  render={props => (\r\n\t\t\t\t<route.component {...props} routes={{...rest}.routes} />\r\n\t\t\t  )}\r\n\t\t\t/>\r\n\t\t  );\r\n\t}\r\n\t\r\n}\r\nconst App = () => {\r\n\treturn <Router>\r\n\t\t<Header />\r\n\t\t<Switch>\r\n          {routes.map((route) => (\r\n            <RouteWithSubRoutes {...route} />\r\n          ))}\r\n        </Switch>\r\n\t</Router>\r\n}\r\n\t\r\n\r\nexport {RouteWithSubRoutes,App};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function PrivateRoute({ component:Com, ...rest }) {\r\n// \treturn (\r\n// \t  <Route\r\n// \t\t{...rest}\r\n// \t\trender={({ location }) =>\r\n// \t\t   localStorage.getItem('userinfo')\r\n// \t\t   ?<Com /> \r\n// \t\t   : (\r\n// \t\t\t<Redirect\r\n// \t\t\t  to={{\r\n// \t\t\t\tpathname: \"/login\",\r\n// \t\t\t\tstate: location \r\n// \t\t\t  }}\r\n// \t\t\t/>\r\n// \t\t  )\r\n// \t\t}\r\n// \t  />\r\n// \t);\r\n//   }\r\n\r\n// const App = ()=>{\r\n// \treturn <Router>\r\n// \t\t<Header/>\r\n// \t\t<Switch>\r\n// \t\t\t{/* 2020/10/12 */}\r\n// \t\t\t{\r\n\r\n// \t\t\t\troutes.map(({pri,...rest})=>{\r\n// \t\t\t\t\t// <Route exact={route.exact} path={route.path} component={route.component} />\r\n// \t\t\t\t\tif(!pri){\r\n// \t\t\t\t\t\treturn <Route {...rest}/>\r\n// \t\t\t\t\t}\r\n// \t\t\t\t\telse{\r\n// \t\t\t\t\t\treturn <PrivateRoute {...rest}/>\r\n// \t\t\t\t\t}\r\n\t\t\t\t\t\r\n// \t\t\t\t})\r\n// \t\t\t}\r\n\t\t\t\t\r\n\t\t\t\r\n// \t\t\t{/*2020/10/5*/}\r\n// \t\t\t{/* home组件这种配置方式会在Home组件的props内注入四个属性 */}\r\n// \t\t\t{/* /:id */}\r\n// \t\t\t{/* <Route exact path='/' component={Home1} />\r\n\t\t\t\r\n// \t\t\t<PrivateRoute path='/doc' component={Doc} />\r\n// \t\t\t<PrivateRoute path='/tuto' component={Tuto}/>\r\n// \t\t\t<PrivateRoute path='/blog' component={Blog}/>\r\n// \t\t\t<Route path='/comm' component={Comm}/>\r\n// \t\t\t<Route path='/login' component={Login}/>\r\n// \t\t\t<Router component={()=><div>404</div>}/>\r\n//       <Router path='*' component={()=><div>404</div>}/> */}\r\n// \t\t</Switch>\r\n// \t</Router>\r\n// }\r\n\r\n","// import { render } from '@testing-library/react';\r\n// import { data } from 'jquery';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import Control from './components/Control';\r\n// import Home from './pages/Home';\r\n// import Demo01 from './pages/Demo01';\r\n// import App from './pages/App';\r\n// import App1 from './pages/App1';\r\n// import Hoc,{Detail} from './pages/Hoc';\r\n// import Header from './pages/Header';\r\n// import Hook from './pages/Hook'\r\n// import Context from './pages/context'\r\n// import TodoList from './components/TodoList';\r\n// import {App} from './App'\r\nimport {App} from './App'\r\n// import 'antd-mobile/dist/antd-mobile.css'; \r\n// import Home from './taobao/Home';\r\n// import Mytab from './pages/Mytab';\r\n//这次作业\r\n// import App from './taobao/App';\r\nReactDOM.render(\r\n  \r\n  // <Demo/>,\r\n  // <div/>,\r\n  // <Home data='abc'/>,\r\n  // <Control/>,\r\n  // <Demo01/>,\r\n  // <App/>,\r\n  // <div><Hoc/><Detail name='tom'/></div>,\r\n  // <Context.Provider value='123'><Hook/></Context.Provider>,\r\n  // <TodoList/>,\r\n  // <App1/>,\r\n  // <Home/>,\r\n  <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// ctrl+shift+左右键   ：选中整个单词\r\n//ctrl+shift+L:选中所有一样的单词\r\n\r\n\r\n\r\n// const List=(props)=>{\r\n//   return <ul>\r\n//     {\r\n//       props.data.map((item)=><li key={item.id}>{item.title}</li>)\r\n//     }\r\n//   </ul>\r\n// }\r\n// \r\n\r\n\r\n\r\n\r\n// class Home extends React.Component{\r\n//   constructor(){\r\n//     super();\r\n//     this.state={\r\n//       data:[1,2,3]\r\n//     }\r\n    \r\n    // fetch('https://cnodejs.org/api/v1/topics')\r\n    // .then(res=>res.json())\r\n    // .then(({data})=>{\r\n    //   this.setState({data})\r\n    // })\r\n    // this.state={\r\n    //   data:[1,2,3]\r\n    // }\r\n  //   setTimeout(()=>{\r\n  //     this.setState({data:[5,6,7,8]})\r\n  //   },1000)\r\n  // }\r\n  // render(){\r\n  //   return <ul>\r\n  //     {\r\n  //       data.map(\r\n  //         (item)=><li key={item.id}>{item}</li>\r\n  //       )\r\n  //     }\r\n  //   </ul>\r\n  // }\r\n\r\n\r\n\r\n// // componentDidMount(){//在render之后执行，执行之后render有执行一次，因为setState的调用\r\n// //   fetch('https://cnodejs.org/api/v1/topics')\r\n// //     .then(res=>res.json())\r\n// //     .then(({data})=>{\r\n// //       this.setState({data})\r\n// //     })\r\n// // }\r\n\r\n\r\n// // handleClick(item){\r\n// //   console.log(this.item);\r\n// // }\r\n\r\n// // getData=(page)=>{\r\n// //   console.log(page);\r\n// //   fetch('https://cnodejs.org/api/v1/topics?page='+page)\r\n// //     .then(res=>res.json())\r\n// //     .then(({data})=>{\r\n// //       this.setState({data})\r\n// //     })\r\n// // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // render(){\r\n  //   const {data}=this.state;\r\n  //   // return <ul>\r\n  //     // {\r\n  //   //     data.map(\r\n  //   //       (item)=><li>{item.title}</li>\r\n  //   //     )\r\n  //   //   }\r\n  //   // </ul>\r\n  //   const btns=[1,2,3,4,5];\r\n  //   return <div>\r\n  //     {/* <button onClick={this.handleClick}></button> */}\r\n  //     {\r\n  //      btns.map( (item) => <button key={item} onClick={()=>this.getData(item) }>{item}</button>)\r\n  //     }\r\n  //     <List data={data}/>\r\n  //   </div> \r\n    \r\n  // }\r\n\r\n\r\n// }\r\n\r\n// ReactDOM.render(\r\n  \r\n//   // <Demo/>,\r\n//   // <div/>,\r\n//   // <Home data='abc'/>,\r\n//   // <Control/>,\r\n//   // <Demo01/>,\r\n//   // <App/>,\r\n//   // <div><Hoc/><Detail name='tom'/></div>,\r\n//   // <Context.Provider value='123'><Hook/></Context.Provider>,\r\n//   // <TodoList/>,\r\n//   // <App1/>,\r\n//   <App/>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n//didupdata判断，不进行存储；\r\n\r\n\r\n\r\n\r\n// 点击按钮，获得数字\r\n// const Buttons=()=>{\r\n//   const btns=[1,2,3,4,5];\r\n//   const handleClick=(num)=>{\r\n//     console.log(num);\r\n//   }\r\n//   return <div>\r\n//     {\r\n//        btns.map( (item) => <button key={item} onClick={()=>handleClick(item)}>{item}</button>)\r\n//     }\r\n   \r\n//   </div>\r\n// }\r\n// ReactDOM.render(\r\n//   <Buttons/>,\r\n//   document.getElementById('root')\r\n// )\r\n\r\n\r\n\r\n\r\n\r\n// const List=()=>{\r\n  //   const list=[1,2,3,4,5];\r\n  \r\n  //   return <div>\r\n  //     {\r\n  //       list.map((item)=><li key={item.id}>{item}</li>)  \r\n  //     }\r\n  //   </div>\r\n    \r\n  // };\r\n  // ReactDOM.render(\r\n  //     <List/>,\r\n  //     document.getElementById('root')\r\n  // );\r\n\r\n\r\n\r\n\r\n//智能组件\r\n//类组件:只有类组件能够作为只能组件\r\n// class Demo extends React.Component{\r\n//   constructor(){\r\n//     super();\r\n//     this.state=new Date().toLocaleString();\r\n//     //每调用一次setState,就进行一次渲染render\r\n//     setInterval(()=>{\r\n//       this.setState({name:new Date().toLocaleString()});\r\n//     },1000)\r\n//   }\r\n//   render(){\r\n//     return <div>\r\n//       <h1>组件</h1>\r\n//       <div>name:{this.state.name}</div>\r\n//     </div>\r\n//   }\r\n// }\r\n// ReactDOM.render(\r\n//   <Demo/>,\r\n//   document.getElementById('root')\r\n// )\r\n\r\n\r\n\r\n\r\n\r\n// class Demo extends React.Component{\r\n//   constructor(){\r\n//     super();\r\n//     //声明状态\r\n//     this.state=new Date().toLocaleString();\r\n\r\n//     // setInterval(()=>{\r\n//     //   this.setState({name:new Date().toLocaleString()});\r\n      \r\n//     // },1000)\r\n//   }\r\n//   render(){\r\n//     return <div>\r\n//       <h1>组件</h1>\r\n//       <div>name:{this.state}</div>\r\n//     </div>\r\n//   }\r\n// }\r\n// ReactDOM.render(\r\n//   <Demo/>,\r\n//   document.getElementById('root')\r\n// )\r\n\r\n\r\n\r\n\r\n//   render(){\r\n//     return <div>\r\n//       <h1>组件</h1>\r\n//       <div>name:{this.state.name}</div>\r\n//       <App title={this.state.name} id=\"app\"/>\r\n//     </div>\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n// 组件声明\r\n// 函数组件\r\n//UI（展示）组件，木偶组件\r\n// function App(props){\r\n//   console.log(props);//是一个对象\r\n//   //解构\r\n//   const{title,id}=props;\r\n//   return<div>\r\n//     <div>{title}</div>\r\n//     <div>{id}</div>\r\n//   </div>\r\n// }\r\n// ReactDOM.render(\r\n//   <App title=\"abc\" id=\"efg\"/>,\r\n//   document.getElementById('root')\r\n// )\r\n\r\n\r\n\r\n// ReactDOM.render(\r\n//   // ele,\r\n//   <App title='abc' id=\"app\"/>,\r\n//   // <Demo/>,\r\n//   // <div/>,\r\n//   // <Home/>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n\r\n//组件\r\n/*---------------------------------------------------------------------------*/\r\n//jsx\r\n\r\n\r\n\r\n// let ele=<h1 id=\"title\">hello React</h1>;\r\n// let ele=React.createElement('h1',{id:'title'},'hello React');\r\n// console.log(ele);\r\n\r\n// let ele=React.createElement(\r\n//   'h1',\r\n//   {id:'title'},\r\n//   React.createElement('div',{id:'div1'},'hello')\r\n// );\r\n\r\n\r\n\r\n// let ele=<h1 id=\"title\" className=\"tit\">\r\n//   <div>当前时间</div>\r\n//   {new Date().toLocaleString()}\r\n// </h1>\r\n\r\n\r\n\r\n//获取当前时间\r\n// let ele=<h1>\r\n//   <div>当前时间</div>\r\n//   {new Date().toLocaleString()}\r\n// </h1>\r\n// ReactDOM.render(\r\n//   ele,\r\n//   document.getElementById('root')\r\n// )\r\n\r\n\r\n\r\n//定时器\r\n// let ele;\r\n// setInterval(()=>{\r\n//   ele=<h1>\r\n//     <div>当前时间</div>\r\n//     {new Date().toLocaleString()}\r\n//   </h1>\r\n// ReactDOM.render(\r\n//   ele,\r\n//   document.getElementById('root')\r\n// )\r\n// },1000);\r\n\r\n\r\n\r\n\r\n// let ele =<div id=\"title\" className=\"tit\">\r\n//   <h1>hello React</h1>\r\n//   hello world\r\n//   <h2>react</h2>\r\n//   <div>jsx</div>\r\n// </div>\r\n\r\n// let ReactDom={\r\n//   render(eleObj,container){\r\n//     //解构\r\n//     const{type,props}=eleObj;//type是第一层节点，props是第一层节点的属性，以及它的子元素\r\n//     //创建第一层节点 \r\n//     let ele=document.createElement(type);\r\n//     //遍历属性对象，将属性添加到第一层节点对象\r\n//     //props 包括id class 节点 字符串等内容\r\n//     for(const prop in props){ \r\n//       if(prop=='children'){\r\n//         //如果prop是子元素，将第一层节点对象的子元素添加进去\r\n//         if(typeof props.children==='string'){\r\n//           //如果子元素是字符串，为了避免覆盖先前文本，创建一个文本节点，将文本节点添加到第一层节点中，直接跳出\r\n//           const txtNode=document.createTextNode(props.children);\r\n//           ele.appendChild(txtNode);\r\n//           break;\r\n//         }\r\n//         //如果不是字符串，而是一个标签\r\n//         props.children.forEach((child)=>{\r\n//           if(typeof child==='string'){\r\n//             //这两条代码可以省略\r\n//             // const txtNode=document.createTextNode(child);\r\n//             // ele.appendChild(txtNode);\r\n//           }else{\r\n//             ReactDom.render(child,ele);\r\n//           }\r\n//         })\r\n//       }else{//如果prop是属性值，将props的属性添加给新建的ele节点\r\n//         ele[prop]=props[prop];\r\n//       }\r\n//     }\r\n//     container.appendChild(ele);//将ele节点添加到容器中\r\n//   }\r\n// }\r\n// ReactDOM.render(\r\n//   ele,\r\n//   document.getElementById('root')\r\n// )\r\n\r\n\r\n\r\n\r\n// if(prop=='className'){\r\n      //   // ele.setAttribute('class',props[prop]);\r\n      //   ele[prop]=props[prop];\r\n      // }\r\n\r\n\r\n\r\n// ReactDOM.render(\r\n//   // ele,\r\n//   // <App title='abc' id=\"app\"/>,\r\n//   // <Demo/>,\r\n//   // <div/>,\r\n//   <Home/>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n\r\n\r\n/*\r\n1.原生JS，DOM操作（JQ）\r\n2.React:开发效率高，性能高（不卡死），\r\n3.环境搭建，创建一个项目，运行\r\n4.JSX语法\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}